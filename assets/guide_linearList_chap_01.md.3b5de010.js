import{_ as s,o as n,c as a,g as l}from"./app.8840feec.js";const C=JSON.parse('{"title":"链表（线性表的链式表示）","description":"","frontmatter":{},"headers":[{"level":2,"title":"1.2.1 头部插入","slug":"_1-2-1-头部插入","link":"#_1-2-1-头部插入","children":[]},{"level":2,"title":"1.2.2 尾部插入","slug":"_1-2-2-尾部插入","link":"#_1-2-2-尾部插入","children":[]},{"level":2,"title":"1.2.3 查找：位置查找、按值查找","slug":"_1-2-3-查找-位置查找、按值查找","link":"#_1-2-3-查找-位置查找、按值查找","children":[]},{"level":2,"title":"1.2.4 在位置i插入元素","slug":"_1-2-4-在位置i插入元素","link":"#_1-2-4-在位置i插入元素","children":[]},{"level":2,"title":"1.2.5 单链表的删除","slug":"_1-2-5-单链表的删除","link":"#_1-2-5-单链表的删除","children":[]}],"relativePath":"guide/linearList/chap_01.md"}'),p={name:"guide/linearList/chap_01.md"},o=l(`<h1 id="链表-线性表的链式表示" tabindex="-1">链表（线性表的链式表示） <a class="header-anchor" href="#链表-线性表的链式表示" aria-hidden="true">#</a></h1><ul><li>大话时刻：链表是通过指针来实现。就是指来指去。有单向链表、双向链表。用针线，把一块块布片连起来，布头串一下，从布尾穿出去，反复如此，再去串下一个布片。</li></ul><h2 id="_1-2-1-头部插入" tabindex="-1">1.2.1 头部插入 <a class="header-anchor" href="#_1-2-1-头部插入" aria-hidden="true">#</a></h2><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdlib.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> ElemType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> LNode</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  ElemType data</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 数据域</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> LNode </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">next</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 指针域</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">LinkList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// LNode*是结构体指针，和LinkList是等价的</span></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">head_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">*)</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;"> // 申请头结点空间，头指针指向头结点</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span><span style="color:#676E95;font-style:italic;"> // 初始化头结点的next指针为NULL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  ElemType x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 定义新节点指针</span></span>
<span class="line"><span style="color:#F07178;">  LNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;"> // 申请新节点空间， 新节点指针指向新节点</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 为新节点的数据域赋值</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 新节点的next指针指向原来头结点的next指针</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 头结点的next指针指向新节点的指针</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%3d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 定义头指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 申请头结点 头指针指向头结点 初始化头结点next指针为NULL</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">3. scanf 输入数据 为数据申请结点空间 头结点next指针指向新节点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">4. 新节点的next指向头结点的next指针， 新节点data赋值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  LNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 链表头指针 结构体指针类型</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">head_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-2-2-尾部插入" tabindex="-1">1.2.2 尾部插入 <a class="header-anchor" href="#_1-2-2-尾部插入" aria-hidden="true">#</a></h2><div class="language-C"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdlib.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> ElemType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> LNode</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  ElemType data</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 数据域</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> LNode </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">next</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 指针域</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">LinkList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%3d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">尾插法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 定义头指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 申请头结点，头指针指向头结点 头结点的next初始化为NULL</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">3. 定义一个尾结点指针 用来指向最后一个结点 其初始化指向头结点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">4. scanf输入数据 申请结点空间 尾结点的next指向新节点 新节点data赋值 尾结点重置为新节点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">5. 尾结点的next为NULL</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span><span style="color:#676E95;font-style:italic;"> // 申请头结点 头指针指向头结点</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span><span style="color:#676E95;font-style:italic;"> // 初始化头结点的Next指针为NULL</span></span>
<span class="line"><span style="color:#F07178;">  LinkList tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;">// 定义结构体指针类型 尾结点指向头部结点，新节点</span></span>
<span class="line"><span style="color:#F07178;">  ElemType x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)(</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  LNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 链表头指针 结构体指针类型</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 尾部插入</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-2-3-查找-位置查找、按值查找" tabindex="-1">1.2.3 查找：位置查找、按值查找 <a class="header-anchor" href="#_1-2-3-查找-位置查找、按值查找" aria-hidden="true">#</a></h2><div class="language-c"><button title="Copy Code" class="copy"></button><span class="lang">c</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdlib.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> ElemType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> LNode</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  ElemType data</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 数据域</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> LNode </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">next</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 指针域</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">LinkList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%3d    %x</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">尾插法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 定义头指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 申请头结点，头指针指向头结点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">3. 定义一个尾结点指针 用来指向最后一个结点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">4. scanf输入数据 申请结点空间 头结点next指针指向新结点next指针 保存尾结点指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  ElemType x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)(</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">查找：按位置查找</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 做边界判断  查找位置不能小于一 如果是0就返回头指针 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 做循环 依次赋值出 当前结点的指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> j </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    j</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">查找： 值查找</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">LinkList </span><span style="color:#82AAFF;">LocateElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ElemType </span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">P </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">P</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> el</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  LNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 链表头指针 结构体指针类型</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 尾部插入</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// LinkList res = GetElement(L, 0);</span></span>
<span class="line"><span style="color:#F07178;">  LinkList res </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">LocateElement</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">22</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">res</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d  %x</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">res </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#89DDFF;font-style:italic;">else</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NULL</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-2-4-在位置i插入元素" tabindex="-1">1.2.4 在位置i插入元素 <a class="header-anchor" href="#_1-2-4-在位置i插入元素" aria-hidden="true">#</a></h2><div class="language-C"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdlib.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> ElemType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> LNode</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  ElemType data</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 数据域</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> LNode </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">next</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 指针域</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">LinkList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  LinkList add </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%3d    %x</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> add</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    add </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">尾插法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 定义头指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 申请头结点，头指针指向头结点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">3. 定义一个尾结点指针 用来指向最后一个结点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">4. scanf输入数据 申请结点空间 头结点next指针指向新结点next指针 保存尾结点指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  ElemType x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)(</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">查找：按位置查找</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 做边界判断  查找位置不能小于一 如果是0就返回头指针 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 做循环 依次赋值出 当前结点的指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> j </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    j</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">向第i个位置插入元素 方法一</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">order_insert_list_1</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ElemType </span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  LinkList x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> length</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  x </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    length</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">    x </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 边界判断</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">target </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> target </span><span style="color:#89DDFF;">&gt;</span><span style="color:#F07178;"> length</span><span style="color:#89DDFF;">+</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> j </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> el</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  x </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#F07178;"> j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> target </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    x </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    j</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">向第i个位置插入元素 方法二 借助GetElement() 获得 i-1元素 的地址</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">order_insert_list_2</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> ElemType </span><span style="color:#A6ACCD;font-style:italic;">el</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetElement</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> target </span><span style="color:#89DDFF;">-</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">P </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList N </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">N </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> el</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">N </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> N</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  LNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 链表头指针 结构体指针类型</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 尾部插入</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// order_insert_list_1(L, 2, 66);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">order_insert_list_2</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">66</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="_1-2-5-单链表的删除" tabindex="-1">1.2.5 单链表的删除 <a class="header-anchor" href="#_1-2-5-单链表的删除" aria-hidden="true">#</a></h2><div class="language-C"><button title="Copy Code" class="copy"></button><span class="lang">C</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdio.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">#include</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&lt;</span><span style="color:#C3E88D;">stdlib.h</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> ElemType</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F78C6C;">typedef</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">struct</span><span style="color:#A6ACCD;"> LNode</span></span>
<span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  ElemType data</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 数据域</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">struct</span><span style="color:#F07178;"> LNode </span><span style="color:#89DDFF;">*</span><span style="color:#F07178;">next</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 指针域</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;">LinkList</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  LinkList add </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%3d    %x</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">data</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> add</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">    add </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L</span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">printf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">\\n</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">尾插法</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 定义头指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 申请头结点，头指针指向头结点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">3. 定义一个尾结点指针 用来指向最后一个结点</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">4. scanf输入数据 申请结点空间 头结点next指针指向新结点next指针 保存尾结点指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  L </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">));</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  ElemType x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">x </span><span style="color:#89DDFF;">!=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">9999</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">LinkList</span><span style="color:#89DDFF;">)(</span><span style="color:#82AAFF;">malloc</span><span style="color:#89DDFF;">(sizeof(</span><span style="color:#F07178;">LNode</span><span style="color:#89DDFF;">)));</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">data</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> x</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    tail </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#82AAFF;">scanf</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">%d</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&amp;</span><span style="color:#F07178;">x</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">tail </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  </span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">查找：按位置查找</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">1. 做边界判断  查找位置不能小于一 如果是0就返回头指针 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">2. 做循环 依次赋值出 当前结点的指针</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#A6ACCD;">LNode</span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">GetElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">i</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#C792EA;">int</span><span style="color:#F07178;"> j </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">i </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL;</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">L </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">while</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">j </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;"> i</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    P </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">P </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">    j</span><span style="color:#89DDFF;">++;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> P</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">/*</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">删除元素 根据 GetElement() 来寻找i-1个元素 和 第二个元素</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">把第i个元素 释放掉</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">*/</span></span>
<span class="line"><span style="color:#C792EA;">bool</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">DeleteElement</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">LinkList </span><span style="color:#89DDFF;">&amp;</span><span style="color:#A6ACCD;font-style:italic;">L</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">target</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P1 </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetElement</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> target</span><span style="color:#89DDFF;">-</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  LinkList P2 </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#82AAFF;">GetElement</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> target</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">P1 </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">||</span><span style="color:#F07178;"> P2 </span><span style="color:#89DDFF;">==</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">NULL)</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">false;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#A6ACCD;">P1 </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">=</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">P2 </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">free</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">P2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">true;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">main</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#F07178;">  LNode</span><span style="color:#89DDFF;">*</span><span style="color:#F07178;"> L</span><span style="color:#89DDFF;">;</span><span style="color:#676E95;font-style:italic;"> // 链表头指针 结构体指针类型</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">tail_insert_list</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span><span style="color:#676E95;font-style:italic;"> // 尾部插入</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">DeleteElement</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#82AAFF;">PrintLinkList</span><span style="color:#89DDFF;">(</span><span style="color:#F07178;">L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div>`,12),t=[o];function e(c,F,y,r,D,i){return n(),a("div",null,t)}const L=s(p,[["render",e]]);export{C as __pageData,L as default};
